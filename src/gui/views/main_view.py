"""
–ì–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
–°–æ–¥–µ—Ä–∂–∏—Ç –æ—Å–Ω–æ–≤–Ω–æ–π layout –∏ –∫–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ –º–µ–∂–¥—É –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ GUI.
"""

import tkinter as tk
from tkinter import ttk, filedialog, messagebox
import logging
from typing import Optional, List

from ..models.app_model import ProcessingState
from ..widgets.drag_drop_frame import DragDropFrame
from .image_list_view import ImageListView
from .settings_view import SettingsView
from .progress_view import ProgressView

# –ò–º–ø–æ—Ä—Ç –¥–ª—è —Ç–∏–ø–æ–≤
try:
    from ..presenters.main_presenter import MainPresenter
    from core.ocr_processor import OCRBatchResult
except ImportError:
    # –î–ª—è –∏–∑–±–µ–∂–∞–Ω–∏—è —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –ø—Ä–∏ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ
    MainPresenter = None
    OCRBatchResult = None


class MainView:
    """
    –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    –ö–æ–æ—Ä–¥–∏–Ω–∏—Ä—É–µ—Ç –≤—Å–µ GUI –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤—É–µ—Ç —Å presenter.
    """

    def __init__(self, parent: tk.Widget):
        """
        –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è.

        :param parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        """
        self.parent = parent
        self.logger = logging.getLogger(__name__)

        # Presenter –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–∑–∂–µ
        self.presenter: Optional[MainPresenter] = None

        # –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        self.main_frame: Optional[tk.Frame] = None
        self.drag_drop_frame: Optional[DragDropFrame] = None
        self.image_list_view: Optional[ImageListView] = None
        self.settings_view: Optional[SettingsView] = None
        self.progress_view: Optional[ProgressView] = None

        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        self.start_button: Optional[tk.Button] = None
        self.clear_button: Optional[tk.Button] = None
        self.sort_button: Optional[tk.Button] = None

        # –°—Ç–∞—Ç—É—Å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        self.status_label: Optional[tk.Label] = None

        # –°–æ–∑–¥–∞–µ–º GUI
        self._create_gui()

    def set_presenter(self, presenter) -> None:
        """
        –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç presenter –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è.

        :param presenter: –≠–∫–∑–µ–º–ø–ª—è—Ä MainPresenter
        """
        self.presenter = presenter

        # –ü–µ—Ä–µ–¥–∞–µ–º presenter –¥–æ—á–µ—Ä–Ω–∏–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º
        if self.image_list_view:
            self.image_list_view.set_presenter(presenter)
        if self.settings_view:
            self.settings_view.set_presenter(presenter)
        if self.progress_view:
            self.progress_view.set_presenter(presenter)
        if self.drag_drop_frame:
            self.drag_drop_frame.set_presenter(presenter)

    def _create_gui(self) -> None:
        """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω—ã–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        # –ì–ª–∞–≤–Ω—ã–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        self.main_frame = tk.Frame(self.parent)
        self.main_frame.pack(fill=tk.BOTH, expand=True, padx=10, pady=10)

        # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏
        self._create_header()
        self._create_main_content()
        self._create_control_buttons()
        self._create_status_bar()

    def _create_header(self) -> None:
        """–°–æ–∑–¥–∞–µ—Ç –∑–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
        header_frame = tk.Frame(self.main_frame)
        header_frame.pack(fill=tk.X, pady=(0, 10))

        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        title_label = tk.Label(
            header_frame,
            text="üîç OCR AI or Offline",
            font=("Arial", 16, "bold"),
            fg="#2c3e50"
        )
        title_label.pack(side=tk.LEFT)

        # –ö–Ω–æ–ø–∫–∏ –º–µ–Ω—é
        menu_frame = tk.Frame(header_frame)
        menu_frame.pack(side=tk.RIGHT)

        # –ö–Ω–æ–ø–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings_btn = tk.Button(
            menu_frame,
            text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏",
            command=self._on_settings_click,
            relief=tk.FLAT,
            padx=10
        )
        settings_btn.pack(side=tk.RIGHT, padx=(5, 0))

        # –ö–Ω–æ–ø–∫–∞ —Å–ø—Ä–∞–≤–∫–∏
        help_btn = tk.Button(
            menu_frame,
            text="‚ùì –°–ø—Ä–∞–≤–∫–∞",
            command=self._on_help_click,
            relief=tk.FLAT,
            padx=10
        )
        help_btn.pack(side=tk.RIGHT, padx=(5, 0))

    def _create_main_content(self) -> None:
        """–°–æ–∑–¥–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ."""
        # –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä —Å –¥–≤—É–º—è –ø–∞–Ω–µ–ª—è–º–∏
        main_content = tk.Frame(self.main_frame)
        main_content.pack(fill=tk.BOTH, expand=True)

        # –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        left_panel = tk.LabelFrame(main_content, text="üìÅ –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", padx=5, pady=5)
        left_panel.pack(side=tk.LEFT, fill=tk.BOTH, expand=True, padx=(0, 5))

        # –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        right_panel = tk.LabelFrame(main_content, text="‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OCR", padx=5, pady=5)
        right_panel.pack(side=tk.RIGHT, fill=tk.Y, padx=(5, 0))
        right_panel.configure(width=300)
        right_panel.pack_propagate(False)

        self._create_images_panel(left_panel)
        self._create_settings_panel(right_panel)

    def _create_images_panel(self, parent: tk.Widget) -> None:
        """
        –°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏.

        :param parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        """
        # Drag & Drop –æ–±–ª–∞—Å—Ç—å
        self.drag_drop_frame = DragDropFrame(parent)
        self.drag_drop_frame.pack(fill=tk.X, pady=(0, 10))

        # –ö–Ω–æ–ø–∫–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        buttons_frame = tk.Frame(parent)
        buttons_frame.pack(fill=tk.X, pady=(0, 10))

        add_files_btn = tk.Button(
            buttons_frame,
            text="üìÅ –î–æ–±–∞–≤–∏—Ç—å —Ñ–∞–π–ª—ã",
            command=self._on_add_files_click,
            bg="#3498db",
            fg="white",
            padx=15,
            pady=5
        )
        add_files_btn.pack(side=tk.LEFT, padx=(0, 5))

        add_folder_btn = tk.Button(
            buttons_frame,
            text="üìÇ –î–æ–±–∞–≤–∏—Ç—å –ø–∞–ø–∫—É",
            command=self._on_add_folder_click,
            bg="#3498db",
            fg="white",
            padx=15,
            pady=5
        )
        add_folder_btn.pack(side=tk.LEFT, padx=5)

        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        self.clear_button = tk.Button(
            buttons_frame,
            text="üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å",
            command=self._on_clear_click,
            bg="#e74c3c",
            fg="white",
            padx=15,
            pady=5
        )
        self.clear_button.pack(side=tk.RIGHT)

        # –°–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        self.image_list_view = ImageListView(parent)
        self.image_list_view.pack(fill=tk.BOTH, expand=True)

    def _create_settings_panel(self, parent: tk.Widget) -> None:
        """
        –°–æ–∑–¥–∞–µ—Ç –ø–∞–Ω–µ–ª—å –Ω–∞—Å—Ç—Ä–æ–µ–∫.

        :param parent: –†–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –≤–∏–¥–∂–µ—Ç
        """
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ OCR
        self.settings_view = SettingsView(parent)
        self.settings_view.pack(fill=tk.BOTH, expand=True)

    def _create_control_buttons(self) -> None:
        """–°–æ–∑–¥–∞–µ—Ç –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–æ–π."""
        control_frame = tk.Frame(self.main_frame)
        control_frame.pack(fill=tk.X, pady=(10, 0))

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        self.sort_button = tk.Button(
            control_frame,
            text="üî¢ –°–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å",
            command=self._on_sort_click,
            bg="#f39c12",
            fg="white",
            padx=20,
            pady=8
        )
        self.sort_button.pack(side=tk.LEFT)

        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        self.start_button = tk.Button(
            control_frame,
            text="üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É OCR",
            command=self._on_start_processing_click,
            bg="#27ae60",
            fg="white",
            font=("Arial", 12, "bold"),
            padx=30,
            pady=10
        )
        self.start_button.pack(side=tk.RIGHT)

    def _create_status_bar(self) -> None:
        """–°–æ–∑–¥–∞–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É."""
        status_frame = tk.Frame(self.main_frame, relief=tk.SUNKEN, bd=1)
        status_frame.pack(fill=tk.X, pady=(5, 0))

        self.status_label = tk.Label(
            status_frame,
            text="–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ",
            anchor=tk.W,
            padx=5,
            pady=2
        )
        self.status_label.pack(fill=tk.X)

    # ========================
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    # ========================

    def _on_add_files_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤."""
        if not self.presenter:
            return

        filetypes = [
            ("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "*.png *.jpg *.jpeg *.tiff *.bmp *.gif"),
            ("PNG —Ñ–∞–π–ª—ã", "*.png"),
            ("JPEG —Ñ–∞–π–ª—ã", "*.jpg *.jpeg"),
            ("–í—Å–µ —Ñ–∞–π–ª—ã", "*.*")
        ]

        files = filedialog.askopenfilenames(
            title="–í—ã–±–µ—Ä–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è",
            filetypes=filetypes
        )

        if files:
            result = self.presenter.add_files(list(files))
            self._show_add_files_result(result)

    def _on_add_folder_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–∞–ø–∫–∏."""
        if not self.presenter:
            return

        directory = filedialog.askdirectory(title="–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")

        if directory:
            # –°–ø—Ä–∞—à–∏–≤–∞–µ–º –æ —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ–º –ø–æ–∏—Å–∫–µ
            recursive = messagebox.askyesno(
                "–ü–æ–∏—Å–∫ –≤ –ø–æ–¥–ø–∞–ø–∫–∞—Ö",
                "–ò—Å–∫–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤–æ –≤—Å–µ—Ö –ø–æ–¥–ø–∞–ø–∫–∞—Ö?",
                default=messagebox.NO
            )

            result = self.presenter.add_directory(directory, recursive)
            self._show_add_files_result(result)

    def _on_clear_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—á–∏—Å—Ç–∫–∏ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤."""
        if not self.presenter:
            return

        if messagebox.askyesno("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ", "–û—á–∏—Å—Ç–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π?"):
            self.presenter.clear_files()

    def _on_sort_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ —Ñ–∞–π–ª–æ–≤."""
        if not self.presenter:
            return

        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –º–µ—Ç–æ–¥ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏ –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        settings = self.presenter.get_settings()
        current_method = settings.sort_method

        self.presenter.sort_files(current_method)
        self.update_status(f"–§–∞–π–ª—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã: {settings.get_sort_method_name()}")

    def _on_start_processing_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–ø—É—Å–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ OCR."""
        if not self.presenter:
            return

        if not self.presenter.can_start_processing():
            reasons = []

            if self.presenter.get_statistics()['valid_files'] == 0:
                reasons.append("–ù–µ—Ç —Ñ–∞–π–ª–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")

            settings = self.presenter.get_settings()
            if not settings.output_file:
                reasons.append("–ù–µ —É–∫–∞–∑–∞–Ω –≤—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª")

            messagebox.showwarning(
                "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É",
                "–ü—Ä–∏—á–∏–Ω—ã:\n" + "\n".join(f"‚Ä¢ {reason}" for reason in reasons)
            )
            return

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if self.progress_view:
            self.progress_view.show_dialog()

        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        success = self.presenter.start_processing()
        if not success:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É")
            if self.progress_view:
                self.progress_view.hide_dialog()

    def _on_settings_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        messagebox.showinfo("–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–î–µ—Ç–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏")

    def _on_help_click(self) -> None:
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–ø—Ä–∞–≤–∫–∏."""
        help_text = """OCR AI or Offline - –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–∞

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –î–æ–±–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫–∏ –∏–ª–∏ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç–µ —Ñ–∞–π–ª—ã
2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ (Offline/Online)
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –ø—Ä–∞–≤–æ–π –ø–∞–Ω–µ–ª–∏
4. –ù–∞–∂–º–∏—Ç–µ "–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É OCR"

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ñ–æ—Ä–º–∞—Ç—ã:
‚Ä¢ PNG, JPG, JPEG, TIFF, BMP, GIF

–†–µ–∂–∏–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏:
‚Ä¢ Offline: Tesseract OCR (–±—ã—Å—Ç—Ä–æ, –±–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞)
‚Ä¢ Online: –ò–ò –º–æ–¥–µ–ª–∏ (–±–æ–ª–µ–µ —Ç–æ—á–Ω–æ, —Ç—Ä–µ–±—É–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç)
"""
        messagebox.showinfo("–°–ø—Ä–∞–≤–∫–∞", help_text)

    def _show_add_files_result(self, result: dict) -> None:
        """
        –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤.

        :param result: –†–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        """
        added = len(result.get('added', []))
        skipped = len(result.get('skipped', []))
        invalid = len(result.get('invalid', []))

        if added > 0:
            self.update_status(f"–î–æ–±–∞–≤–ª–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {added}")

        if skipped > 0 or invalid > 0:
            messages = []
            if skipped > 0:
                messages.append(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ (–¥—É–±–ª–∏–∫–∞—Ç—ã): {skipped}")
            if invalid > 0:
                messages.append(f"–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç: {invalid}")

            messagebox.showwarning(
                "–î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤",
                "\n".join(messages)
            )

    # ==============================
    # –ú–µ—Ç–æ–¥—ã –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    # ==============================

    def update_image_list(self) -> None:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–ø–∏—Å–æ–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π."""
        if self.image_list_view and self.presenter:
            files = self.presenter.get_image_files()
            self.image_list_view.update_file_list(files)

    def update_statistics(self) -> None:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É."""
        if not self.presenter:
            return

        stats = self.presenter.get_statistics()

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É
        total = stats['total_files']
        valid = stats['valid_files']
        size_mb = stats['total_size_mb']

        if total > 0:
            status_text = f"–§–∞–π–ª–æ–≤: {valid}/{total}, –†–∞–∑–º–µ—Ä: {size_mb:.1f} –ú–ë"

            if valid != total:
                status_text += f" (–Ω–µ–≤–µ—Ä–Ω—ã—Ö: {total - valid})"

            self.update_status(status_text)
        else:
            self.update_status("–§–∞–π–ª—ã –Ω–µ –¥–æ–±–∞–≤–ª–µ–Ω—ã")

        # –û–±–Ω–æ–≤–ª—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–Ω–æ–ø–æ–∫
        self._update_button_states()

    def update_settings_display(self) -> None:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫."""
        if self.settings_view:
            self.settings_view.update_from_model()

    def update_processing_state(self, state: ProcessingState) -> None:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        :param state: –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        """
        if state.is_running:
            self.start_button.configure(
                text="‚è∏Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞...",
                state=tk.DISABLED,
                bg="#e67e22"
            )

            if state.current_filename:
                self.update_status(f"–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è: {state.current_filename}")
        else:
            self.start_button.configure(
                text="üöÄ –ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É OCR",
                state=tk.NORMAL,
                bg="#27ae60"
            )

            if state.progress_percentage >= 100:
                self.update_status("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
            else:
                self.update_status("–ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ")

        # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –¥–∏–∞–ª–æ–≥
        if self.progress_view:
            self.progress_view.update_progress(state)

    def update_status(self, message: str) -> None:
        """
        –û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç—É—Å–Ω—É—é —Å—Ç—Ä–æ–∫—É.

        :param message: –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        """
        if self.status_label:
            self.status_label.configure(text=message)

    def _update_button_states(self) -> None:
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞."""
        if not self.presenter:
            return

        stats = self.presenter.get_statistics()
        has_files = stats['valid_files'] > 0
        is_processing = self.presenter.get_processing_state().is_running

        # –ö–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
        if self.clear_button:
            self.clear_button.configure(state=tk.NORMAL if has_files and not is_processing else tk.DISABLED)

        # –ö–Ω–æ–ø–∫–∞ —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∏
        if self.sort_button:
            self.sort_button.configure(state=tk.NORMAL if has_files and not is_processing else tk.DISABLED)

        # –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
        if self.start_button:
            can_start = self.presenter.can_start_processing()
            self.start_button.configure(state=tk.NORMAL if can_start else tk.DISABLED)

    # =======================
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –æ—Ç presenter
    # =======================

    def on_processing_completed(self, result) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        :param result: –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ OCRBatchResult
        """
        # –°–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if self.progress_view:
            self.progress_view.hide_dialog()

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        success_rate = result.successful_files / result.total_files * 100 if result.total_files > 0 else 0

        message = (
            f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n\n"
            f"–û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {result.successful_files} –∏–∑ {result.total_files} —Ñ–∞–π–ª–æ–≤ ({success_rate:.1f}%)\n"
            f"–í—Ä–µ–º—è: {result.total_processing_time:.1f} —Å–µ–∫—É–Ω–¥\n"
            f"–†–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {result.output_file_path}"
        )

        messagebox.showinfo("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞", message)

        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –æ—Ç–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if messagebox.askyesno("–û—Ç–∫—Ä—ã—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç", "–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏?"):
            self._open_result_file(result.output_file_path)

    def on_processing_error(self, error_message: str) -> None:
        """
        –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏.

        :param error_message: –°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
        """
        # –°–∫—Ä—ã–≤–∞–µ–º –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞
        if self.progress_view:
            self.progress_view.hide_dialog()

        messagebox.showerror("–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏", f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞:\n{error_message}")

    def _open_result_file(self, file_path: str) -> None:
        """
        –û—Ç–∫—Ä—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∏—Ä—É—é—â–∏–π —Ñ–∞–π–ª –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ä–µ–¥–∞–∫—Ç–æ—Ä–µ.

        :param file_path: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É
        """
        try:
            import os
            import platform

            if platform.system() == "Windows":
                os.startfile(file_path)
            elif platform.system() == "Darwin":  # macOS
                os.system(f"open '{file_path}'")
            else:  # Linux
                os.system(f"xdg-open '{file_path}'")

        except Exception as e:
            self.logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª {file_path}: {e}")
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª:\n{e}")

    # ===================
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
    # ===================

    def initialize_progress_view(self) -> None:
        """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –¥–∏–∞–ª–æ–≥ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞."""
        if not self.progress_view:
            self.progress_view = ProgressView(self.parent)
            if self.presenter:
                self.progress_view.set_presenter(self.presenter)
